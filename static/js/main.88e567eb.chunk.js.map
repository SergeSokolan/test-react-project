{"version":3,"sources":["App.js","serviceWorker.js","index.js","style/images/cat.png"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","data","number","titles","_this2","react_default","a","createElement","className","catFood","map","item","index","concat","inStock","key","xmlns","xmlnsXlink","width","height","id","x","y","patternUnits","fill","xlinkHref","cat","fillRule","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","brief","title","subtitle","serving","gift","declOfNum","details","length","weight","description","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.88e567eb.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport data from \"./data/goods.json\";\n//import { ReactComponent as Background } from \"./style/images/list-background.svg\";\nimport cat from \"./style/images/cat.png\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = data;\n  }\n\n  declOfNum(number, titles) {\n    const cases = [2, 0, 1, 1, 1, 2];\n    return titles[\n      number % 100 > 4 && number % 100 < 20\n        ? 2\n        : cases[number % 10 < 5 ? number % 10 : 5]\n    ];\n  }\n\n  render() {\n    return (\n      <section className=\"goods\">\n                <div className=\"goods__container\">\n        <h1 className=\"title\">Ты сегодня покормил кота?</h1>\n          <ul className=\"goods__list\">\n            {this.state.catFood.map((item, index) => (\n              <li\n                className={`goods__item ${\n                  item.inStock === true\n                    ? \"goods__item_available\"\n                    : \"goods__item_unavailable\"\n                }`}\n                key={index}\n              >\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n                  width=\"324px\"\n                  height=\"484px\"\n                  className=\"goods-item__bg\"\n                >\n                  <defs>\n                    <pattern\n                      id=\"pattern\"\n                      x=\"0\"\n                      y=\"0\"\n                      width=\"100%\"\n                      height=\"100%\"\n                      patternUnits=\"userSpaceOnUse\"\n                    >\n                      <rect height=\"100%\" width=\"100%\" fill=\"white\" />\n                      <g id=\"img-overlay\">\n                        <image\n                          x=\"0\"\n                          y=\"211\"\n                          width=\"320\"\n                          height=\"273\"\n                          xlinkHref={cat}\n                        />\n                      </g>\n                    </pattern>\n                  </defs>\n\n                  <path\n                    className=\"goods-item__bg-path\"\n                    fillRule=\"evenodd\"\n                    stroke=\"rgb(22, 152, 217)\"\n                    strokeWidth=\"4px\"\n                    strokeLinecap=\"butt\"\n                    strokeLinejoin=\"miter\"\n                    fill=\"url(#pattern)\"\n                    d=\"M310.000,482.000 L14.000,482.000 C7.373,482.000 2.000,476.627 2.000,470.000 L2.000,45.000 L45.000,2.000 L310.000,2.000 C316.627,2.000 322.000,7.372 322.000,14.000 L322.000,470.000 C322.000,476.627 316.627,482.000 310.000,482.000 Z\"\n                  />\n                </svg>\n\n                <div className=\"goods-item__card\">\n                  <span className=\"card__text card__text_large card__text_gray\">\n                    {item.brief}\n                  </span>\n                  <h1 className=\"card__title\">{item.title}</h1>\n                  <h2 className=\"card__title card__title_sub\">\n                    {item.subtitle}\n                  </h2>\n                  <span className=\"card__text card__text_gray\">\n                    <b className=\"bold\">{item.serving}</b> порций\n                  </span>\n                  <span className=\"card__text card__text_gray\">\n                    {item.gift === 1\n                      ? \" мышь в подарок\"\n                      : [\n                          <b className=\"bold\" key={index}>\n                            {item.gift}\n                          </b>,\n                          `${this.declOfNum(item.gift, [\n                            \" мышь\",\n                            \" мыши\",\n                            \" мышей\"\n                          ])} в подарок`\n                        ]}\n                  </span>\n                  {item.details.length > 0 && (\n                    <span className=\"card__text card__text_gray\">\n                      {item.details}\n                    </span>\n                  )}\n                  <div className=\"card__ellipse\">\n                    <span className=\"ellipse__qty\">{item.weight}</span>\n                    <span className=\"ellipse__uom\">кг</span>\n                  </div>\n                </div>\n                <span className=\"goods-item__info\">\n                  {item.inStock === true\n                    ? item.description\n                    : `Печалька, ${item.subtitle} закончился.`}\n                </span>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/cat.95ea8834.png\";"],"sourceRoot":""}